{"ast":null,"code":"var _jsxFileName = \"/Users/csgergo/Documents/projects/repo_adu/adu/adu/src/Waitroom/Wait.js\",\n    _s = $RefreshSig$();\n\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { Footer } from \"../Footer\";\nimport { socket } from \"../api/SocketApi\";\nimport { useHistory } from \"react-router\";\nimport { useState } from \"react\";\nimport 'bulma/css/bulma.min.css';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport reactDom from \"react-dom\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Wait({\n  socket,\n  setRoomId,\n  roomId,\n  players,\n  setPlayers,\n  game,\n  setGame\n}) {\n  _s();\n\n  const history = useHistory();\n  const [isCopied, setIsCopied] = useState(false);\n\n  const onCopyText = () => {\n    setIsCopied(true);\n    setTimeout(() => {\n      setIsCopied(false);\n    }, 1000);\n  };\n\n  socket.on(\"state-changed\", function (args) {\n    if (args.roomId === roomId) {\n      let state = JSON.parse(args.state);\n      setGame(state.game);\n      setPlayers(state.players);\n\n      if (state.game.gameStarted) {\n        history.push(\"/game\");\n      }\n    }\n  });\n\n  function handleBossStarts() {\n    game.gameStarted = true;\n    setGame(game);\n    socket.emit(\"sync-state\", roomId, `{\"game\": ${JSON.stringify(game)}, \"players\": ${JSON.stringify(players)} }`, true, response => {\n      console.log(\"state synced\");\n    });\n    history.push(\"/game\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wait\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"waittitle\",\n      className: \"title is-1\",\n      children: \"V\\xE1rakoz\\xE1s a t\\xF6bbi j\\xE1t\\xE9kosra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joinedplayers\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"waitcode\",\n        children: [\"A szoba k\\xF3dja: \", roomId, /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          text: roomId,\n          onCopy: onCopyText,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"copy-area\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"waitedplayer\",\n        children: \"J\\xE1t\\xE9kosok:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: players.map(p => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"waitinglayerlist\",\n          children: p.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), players.map(p => p.boss === true && p.socketid === socket.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBossStarts(),\n        className: \"button is-warning is-rounded\",\n        id: \"startbutton\",\n        children: \"Ind\\xEDt\\xE1s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 61\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 181\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Wait, \"Q7jwlitCz1LeT0CvLjOwxt3uTLM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Wait;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wait\");","map":{"version":3,"sources":["/Users/csgergo/Documents/projects/repo_adu/adu/adu/src/Waitroom/Wait.js"],"names":["CopyToClipboard","Footer","socket","useHistory","useState","BrowserRouter","Route","Switch","reactDom","React","Wait","setRoomId","roomId","players","setPlayers","game","setGame","history","isCopied","setIsCopied","onCopyText","setTimeout","on","args","state","JSON","parse","gameStarted","push","handleBossStarts","emit","stringify","response","console","log","map","p","name","boss","socketid","id"],"mappings":"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","sourcesContent":["import { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { Footer } from \"../Footer\";\nimport { socket } from \"../api/SocketApi\";\nimport { useHistory } from \"react-router\";\nimport { useState } from \"react\";\n\nimport 'bulma/css/bulma.min.css';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport reactDom from \"react-dom\";\nimport React from \"react\";\n\n\nexport function Wait({socket, setRoomId, roomId, players, setPlayers, game, setGame}){\n\n    const history = useHistory();\n    const [isCopied, setIsCopied] = useState(false);\n  \n    const onCopyText = () => {\n      setIsCopied(true);\n      setTimeout(() => {\n        setIsCopied(false);\n      }, 1000);\n    };\n\n    socket.on(\"state-changed\", function (args) {\n        if(args.roomId === roomId){\n          let state = JSON.parse(args.state);\n          setGame(state.game);\n          setPlayers(state.players);\n          if(state.game.gameStarted){\n            history.push(\"/game\");\n          }\n        }\n      });\n\n    function handleBossStarts(){\n        game.gameStarted=true;\n        setGame(game);\n        socket.emit(\"sync-state\", roomId,\n            `{\"game\": ${JSON.stringify(game)}, \"players\": ${JSON.stringify(players)} }`, true,\n            (response) => {\n                console.log(\"state synced\");\n            }\n        );\n        history.push(\"/game\");\n      }\n\n\n    return( <div className=\"wait\">\n    <h1 id=\"waittitle\" className=\"title is-1\">Várakozás a többi játékosra</h1>\n      <div className=\"joinedplayers\">\n        <p id=\"waitcode\">\n          A szoba kódja: {roomId}\n          <CopyToClipboard text={roomId} onCopy={onCopyText}>\n            <div className=\"copy-area\">\n            <i className=\"fas fa-copy\"></i>\n            </div>\n          </CopyToClipboard>\n        </p>\n        <p id=\"waitedplayer\">Játékosok:</p>\n        <ul>\n          {players.map((p) =>\n              <p className=\"waitinglayerlist\">{p.name}</p>\n          )}\n        </ul>\n        {players.map((p) =>\n              p.boss === true && p.socketid === socket.id ? <button onClick={() => handleBossStarts()} className=\"button is-warning is-rounded\" id=\"startbutton\">Indítás</button> : <p></p>\n        )}\n      </div>\n      <Footer />\n    </div>);\n}"]},"metadata":{},"sourceType":"module"}