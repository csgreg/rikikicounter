{"ast":null,"code":"var _jsxFileName = \"/Users/csgergo/Documents/projects/repo_adu/adu/adu/src/Waitroom/Wait.js\",\n    _s = $RefreshSig$();\n\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { Footer } from \"../Footer\";\nimport { socket } from \"../api/SocketApi\";\nimport { useHistory } from \"react-router\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Wait(roomId, game, setGame, players, setPlayers) {\n  _s();\n\n  const [isCopied, setIsCopied] = useState(false);\n\n  const onCopyText = () => {\n    setIsCopied(true);\n    setTimeout(() => {\n      setIsCopied(false);\n    }, 1000);\n  };\n\n  function handleBossStarts() {\n    game.gameStarted = true;\n    setGame(game);\n    socket.emit(\"sync-state\", roomId, `{\"game\": ${JSON.stringify(game)}, \"players\": ${JSON.stringify(players)} }`, false, response => {\n      console.log(\"state synced\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wait\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"waittitle\",\n      className: \"title is-1\",\n      children: \"V\\xE1rakoz\\xE1s a t\\xF6bbi j\\xE1t\\xE9kosra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joinedplayers\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"waitcode\",\n        children: [\"A szoba k\\xF3dja: \", roomId, /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          text: roomId,\n          onCopy: onCopyText,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"copy-area\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"waitedplayer\",\n        children: \"J\\xE1t\\xE9kosok:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), players.map(p => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"waitinglayerlist\",\n        children: p.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)), players.map(p => p.boss === true && p.socketid == socket.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBossStarts(),\n        className: \"button is-warning is-rounded\",\n        id: \"startbutton\",\n        children: \"Ind\\xEDt\\xE1s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 60\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 180\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Wait, \"dIAMLjsduWkZ4KaA+ylUo0FLqmM=\");\n\n_c = Wait;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wait\");","map":{"version":3,"sources":["/Users/csgergo/Documents/projects/repo_adu/adu/adu/src/Waitroom/Wait.js"],"names":["CopyToClipboard","Footer","socket","useHistory","useState","Wait","roomId","game","setGame","players","setPlayers","isCopied","setIsCopied","onCopyText","setTimeout","handleBossStarts","gameStarted","emit","JSON","stringify","response","console","log","map","p","name","boss","socketid","id"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,yBAAhC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,OAAO,SAASC,IAAT,CAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqCC,OAArC,EAA8CC,UAA9C,EAAyD;AAAA;;AAE5D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMS,UAAU,GAAG,MAAM;AACvBD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,UAAU,CAAC,MAAM;AACfF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALD;;AAOA,WAASG,gBAAT,GAA2B;AACvBR,IAAAA,IAAI,CAACS,WAAL,GAAiB,IAAjB;AACAR,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAL,IAAAA,MAAM,CAACe,IAAP,CAAY,YAAZ,EAA0BX,MAA1B,EACK,YAAWY,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAqB,gBAAeW,IAAI,CAACC,SAAL,CAAeV,OAAf,CAAwB,IAD5E,EACiF,KADjF,EAEKW,QAAD,IAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,KAJL;AAMD;;AAGH,sBAAQ;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACR;AAAI,MAAA,EAAE,EAAC,WAAP;AAAmB,MAAA,SAAS,EAAC,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,eAEN;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAG,QAAA,EAAE,EAAC,UAAN;AAAA,yCACkBhB,MADlB,eAEE,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEA,MAAvB;AAA+B,UAAA,MAAM,EAAEO,UAAvC;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACA;AAAG,cAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAG,QAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,EAUKJ,OAAO,CAACc,GAAR,CAAaC,CAAD,iBACT;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA,kBAAiCA,CAAC,CAACC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADH,CAVL,EAaGhB,OAAO,CAACc,GAAR,CAAaC,CAAD,IACPA,CAAC,CAACE,IAAF,KAAW,IAAX,IAAmBF,CAAC,CAACG,QAAF,IAAczB,MAAM,CAAC0B,EAAxC,gBAA6C;AAAQ,QAAA,OAAO,EAAE,MAAMb,gBAAgB,EAAvC;AAA2C,QAAA,SAAS,EAAC,8BAArD;AAAoF,QAAA,EAAE,EAAC,aAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA7C,gBAAqK;AAAA;AAAA;AAAA;AAAA,cAD1K,CAbH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFM,eAmBN,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAnBM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAqBH;;GA5CeV,I;;KAAAA,I","sourcesContent":["import { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { Footer } from \"../Footer\";\nimport { socket } from \"../api/SocketApi\";\nimport { useHistory } from \"react-router\";\nimport { useState } from \"react\";\n\nexport function Wait(roomId, game, setGame, players, setPlayers){\n\n    const [isCopied, setIsCopied] = useState(false);\n  \n    const onCopyText = () => {\n      setIsCopied(true);\n      setTimeout(() => {\n        setIsCopied(false);\n      }, 1000);\n    };\n\n    function handleBossStarts(){\n        game.gameStarted=true;\n        setGame(game);\n        socket.emit(\"sync-state\", roomId,\n            `{\"game\": ${JSON.stringify(game)}, \"players\": ${JSON.stringify(players)} }`, false,\n            (response) => {\n                console.log(\"state synced\");\n            }\n        );\n      }\n\n\n    return( <div className=\"wait\">\n    <h1 id=\"waittitle\" className=\"title is-1\">Várakozás a többi játékosra</h1>\n      <div className=\"joinedplayers\">\n        <p id=\"waitcode\">\n          A szoba kódja: {roomId}\n          <CopyToClipboard text={roomId} onCopy={onCopyText}>\n            <div className=\"copy-area\">\n            <i class=\"fas fa-copy\"></i>\n            </div>\n          </CopyToClipboard>\n        </p>\n        <p id=\"waitedplayer\">Játékosok:</p>\n          {players.map((p) =>\n              <p className=\"waitinglayerlist\">{p.name}</p>\n          )}\n        {players.map((p) =>\n              p.boss === true && p.socketid == socket.id ? <button onClick={() => handleBossStarts()} className=\"button is-warning is-rounded\" id=\"startbutton\">Indítás</button> : <p></p>\n        )}\n      </div>\n      <Footer />\n    </div>);\n}"]},"metadata":{},"sourceType":"module"}