{"ast":null,"code":"var _jsxFileName = \"/Users/csgergo/Documents/projects/repo_adu/adu/adu/src/Game/Tip.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react/cjs/react.development\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Tip({\n  socket,\n  setRoomId,\n  roomId,\n  players,\n  setPlayers,\n  game,\n  setGame,\n  currentPlayerNum\n}) {\n  _s();\n\n  const [tip, setTip] = useState(0);\n\n  function confirmTip() {\n    players[currentPlayerNum].tip = tip;\n    socket.emit(\"sync-state\", roomId, `{\"game\": ${JSON.stringify(game)}, \"players\": ${JSON.stringify(players)} }`, false, response => {\n      console.log(\"state synced\");\n    });\n    setPlayers(players);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tip\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"tipinput\",\n      onChange: event => setTip(event.target.value),\n      className: \"input is-rounded is-warning\",\n      type: \"number\",\n      placeholder: \"Tipp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 160\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"tipbtn\",\n      onClick: () => confirmTip(),\n      className: \"button is-warning is-rounded startbtn\",\n      children: \"R\\xF6gz\\xEDt\\xE9s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gameadus\",\n      children: \"Tippek\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), players.map(p => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"displaypoint\",\n      children: [p.name, \": \", p.tip]\n    }, p.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tip, \"S5l9OTXz28KSnM/yQBtdqmupzOQ=\");\n\n_c = Tip;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tip\");","map":{"version":3,"sources":["/Users/csgergo/Documents/projects/repo_adu/adu/adu/src/Game/Tip.js"],"names":["useState","Tip","socket","setRoomId","roomId","players","setPlayers","game","setGame","currentPlayerNum","tip","setTip","confirmTip","emit","JSON","stringify","response","console","log","event","target","value","map","p","name","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,6BAAzB;;AAEA,OAAO,SAASC,GAAT,CAAa;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,SAAV;AAAqBC,EAAAA,MAArB;AAA6BC,EAAAA,OAA7B;AAAsCC,EAAAA,UAAtC;AAAkDC,EAAAA,IAAlD;AAAwDC,EAAAA,OAAxD;AAAiEC,EAAAA;AAAjE,CAAb,EAAiG;AAAA;;AAEpG,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,CAAD,CAA9B;;AAEA,WAASY,UAAT,GAAqB;AACjBP,IAAAA,OAAO,CAACI,gBAAD,CAAP,CAA0BC,GAA1B,GAAgCA,GAAhC;AACAR,IAAAA,MAAM,CAACW,IAAP,CAAY,YAAZ,EAA0BT,MAA1B,EACK,YAAWU,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAqB,gBAAeO,IAAI,CAACC,SAAL,CAAeV,OAAf,CAAwB,IAD5E,EACiF,KADjF,EAEKW,QAAD,IAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,KAJL;AAMAZ,IAAAA,UAAU,CAACD,OAAD,CAAV;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACA;AAAO,MAAA,EAAE,EAAC,UAAV;AAAqB,MAAA,QAAQ,EAAGc,KAAD,IAAWR,MAAM,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhD;AAAsE,MAAA,SAAS,EAAC,6BAAhF;AAA8G,MAAA,IAAI,EAAC,QAAnH;AAA4H,MAAA,WAAW,EAAC;AAAxI;AAAA;AAAA;AAAA;AAAA,YADA,eACuJ;AAAA;AAAA;AAAA;AAAA,YADvJ,eAEA;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAoB,MAAA,OAAO,EAAE,MAAMT,UAAU,EAA7C;AAAiD,MAAA,SAAS,EAAC,uCAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAIA;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,EAKCP,OAAO,CAACiB,GAAR,CAAaC,CAAD,iBAAO;AAAc,MAAA,SAAS,EAAC,cAAxB;AAAA,iBAAwCA,CAAC,CAACC,IAA1C,QAAkDD,CAAC,CAACb,GAApD;AAAA,OAAQa,CAAC,CAACE,EAAV;AAAA;AAAA;AAAA;AAAA,YAAnB,CALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAxBexB,G;;KAAAA,G","sourcesContent":["import { useState } from \"react/cjs/react.development\";\n\nexport function Tip({ socket, setRoomId, roomId, players, setPlayers, game, setGame, currentPlayerNum }){\n\n    const [tip, setTip] = useState(0);\n\n    function confirmTip(){\n        players[currentPlayerNum].tip = tip;\n        socket.emit(\"sync-state\", roomId,\n            `{\"game\": ${JSON.stringify(game)}, \"players\": ${JSON.stringify(players)} }`, false,\n            (response) => {\n                console.log(\"state synced\");\n            }\n        );\n        setPlayers(players);\n    }\n\n    return (\n        <div className=\"tip\">\n        <input id=\"tipinput\" onChange={(event) => setTip(event.target.value)} className=\"input is-rounded is-warning\" type=\"number\" placeholder=\"Tipp\"></input><br></br>\n        <button id=\"tipbtn\" onClick={() => confirmTip()} className=\"button is-warning is-rounded startbtn\">Rögzítés</button>\n        \n        <h1 className=\"gameadus\">Tippek</h1>\n        {players.map((p) => <p key={p.id} className=\"displaypoint\">{p.name}: {p.tip}</p>)}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}