{"ast":null,"code":"var _jsxFileName = \"/Users/csgergo/Documents/projects/repo_adu/adu/adu/src/Game/Game.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Game({\n  socket,\n  setRoomId,\n  roomId,\n  players,\n  setPlayers,\n  game,\n  setGame,\n  currentPlayerNum\n}) {\n  _s();\n\n  const possibilities = ['♠︎', '♡', '♣', '♦', 'Nincs adu!'];\n  const [tip, setTip] = useState(0);\n  const [hit, setHit] = useState(0);\n\n  function confirmTip() {\n    players[currentPlayerNum].tip = tip;\n    setPlayers(players);\n  }\n\n  function handleNext() {\n    game.laps += 1;\n    setGame(game);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"gameadus\",\n        children: [\"ADU: \", possibilities[game.laps % 5]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"gameadus\",\n        children: [\"Lapok sz\\xE1ma: \", Math.floor(52 / players.length) - game.laps]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"gameadus\",\n        children: \"Pontok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), players.map(p => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"displaypoint\",\n        children: [p.name, \": \", p.point]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"tipinput\",\n        onChange: event => setTip(event.target.value),\n        className: \"input is-rounded is-warning\",\n        type: \"number\",\n        placeholder: \"Tipp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 160\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"tipbtn\",\n        onClick: () => confirmTip(),\n        className: \"button is-warning is-rounded startbtn\",\n        children: \"R\\xF6gz\\xEDt\\xE9s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"gameadus\",\n        children: \"Tippek\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), players.map(p => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"displaypoint\",\n        children: [p.name, \": \", p.tip]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"tipinput\",\n        onChange: event => setHit(event.target.value),\n        className: \"input is-rounded is-warning\",\n        type: \"text\",\n        placeholder: \"Tal\\xE1lat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 161\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"tipbtn\",\n        className: \"button is-warning is-rounded startbtn\",\n        children: \"R\\xF6gz\\xEDt\\xE9s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), players.map(p => p.boss === true && p.socketid === socket.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleNext(),\n        className: \"button is-warning is-rounded\",\n        id: \"nextbutton\",\n        children: \"K\\xF6vetkez\\u0151 k\\xF6r\"\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 61\n      }, this) : \"\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"ADj7C2IH+ui+zOr/+5RdAUbGDR4=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/csgergo/Documents/projects/repo_adu/adu/adu/src/Game/Game.js"],"names":["useState","React","Game","socket","setRoomId","roomId","players","setPlayers","game","setGame","currentPlayerNum","possibilities","tip","setTip","hit","setHit","confirmTip","handleNext","laps","Math","floor","length","map","p","name","point","id","event","target","value","boss","socketid"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport React from 'react';\n\nexport function Game({socket, setRoomId, roomId, players, setPlayers, game, setGame,currentPlayerNum}){\n\n    const possibilities = ['♠︎','♡','♣','♦','Nincs adu!'];\n    const [tip, setTip] = useState(0);\n    const [hit, setHit] = useState(0);\n\n    function confirmTip(){\n        players[currentPlayerNum].tip = tip;\n        setPlayers(players);\n    }\n\n    function handleNext(){\n        game.laps+=1;\n        setGame(game);\n    }\n\n    return(\n    <div className=\"game\">\n        <div>\n        <h1 className=\"gameadus\">ADU: {possibilities[game.laps % 5]}</h1>\n        <h1 className=\"gameadus\">Lapok száma: {Math.floor(52/players.length)-game.laps}</h1>\n        <h1 className=\"gameadus\">Pontok</h1>\n        {players.map((p) => \n            <p key={p.id} className=\"displaypoint\">{p.name}: {p.point}</p>\n        )}\n\n        <input id=\"tipinput\" onChange={(event) => setTip(event.target.value)} className=\"input is-rounded is-warning\" type=\"number\" placeholder=\"Tipp\"></input><br></br>\n        <button id=\"tipbtn\" onClick={() => confirmTip()} className=\"button is-warning is-rounded startbtn\">Rögzítés</button>\n        \n        <h1 className=\"gameadus\">Tippek</h1>\n        {players.map((p) => \n            <p key={p.id} className=\"displaypoint\">{p.name}: {p.tip}</p>\n        )}\n\n        \n        <input id=\"tipinput\" onChange={(event) => setHit(event.target.value)} className=\"input is-rounded is-warning\" type=\"text\" placeholder=\"Találat\"></input><br></br>\n        <button id=\"tipbtn\" className=\"button is-warning is-rounded startbtn\">Rögzítés</button>\n        <br />\n        {players.map((p) =>\n              p.boss === true && p.socketid === socket.id ? <button key={p.id} onClick={() => handleNext()} className=\"button is-warning is-rounded\" id=\"nextbutton\">Következő kör</button> : \"\"\n        )}\n        \n        </div>\n    </div>\n)\n}"]},"metadata":{},"sourceType":"module"}